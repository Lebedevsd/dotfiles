priority -30

snippet h
################################################################################
## $1
################################################################################
endsnippet

snippet package "Bazel Package" b
package(
    default_visibility = ["${1://visibility:private}"],
)
endsnippet

snippet cc_lib "C++ Library" b
cc_library(
    name = "${1:name}",
    srcs = ["$1.cc"],
    hdrs = ["$1.h"],
    deps = [
        $2
    ],
)
endsnippet

snippet cc_bin "C++ Binary" b
cc_binary(
    name = "${1:name}",
    srcs = ["$1.cc"],
    deps = [
        "//base",
        $2
    ],
)
endsnippet

snippet mpm "genmpm" b
genmpm(
    name = "${1:name}",
    package_name = "${2:package_name}",
    srcs = [
        "${3:srcs}",
    ],
)
endsnippet

snippet cc_test "C++ Test" b
cc_test(
    name = "${1:name}_test",
    size = "${2:small}",
    srcs = ["$1_test.cc"],
    deps = [
        ":$1",
        "//testing/base/public:gunit_main",
    ],
)
endsnippet

snippet proto "Protocol Buffer" b
proto_library(
    name = "${1:name}",
    srcs = ["${1/_proto$//}.proto"],${2:
    has_services = 1,}${3:
    cc_api_version = 2,}${4:
    java_api_version = 2,}${5:
    deps = [
        $0
    ],}
)
endsnippet

snippet py_proto "Python Protocol Buffer" b
py_proto_library(
    name = "${1/_proto//}_py_pb2",
    api_version = ${3:2},
    deps = [":${1:name}"],${2:
    has_services = 1,}
)
endsnippet

snippet py_bin "Python Binary" b
py_binary(
    name = "${1:name}",
    srcs = ["$1.py"],
    deps = [
        "//pyglib",
    ],
)
endsnippet

snippet pytype_bin "Python Binary (with Google type annotations)" b
pytype_binary(
    name = "${1:name}",
    srcs = ["$1.py"],
    deps = [
        "//pyglib",
    ],
)
endsnippet

snippet py_lib "Python Library." b
py_library(
    name = "${1:name}",
    srcs = ["$1.py"],
    deps = [
        $0
    ],
)
endsnippet

snippet pytype_lib "Python Library (with Google type annotations)." b
pytype_library(
    name = "${1:name}",
    srcs = ["$1.py"],
    deps = [
        $0
    ],
)
endsnippet

snippet py_test "Python Test" b
py_test(
    name = "${1:name}_test",
    srcs = ["$1_test.py"],
    deps = [
        ":$1",
        "//testing/pybase",
    ],
)
endsnippet

snippet py_appengine_bin "Python Appengine Binary" b
py_appengine_binary(
    name = "${1:name}",
    configs = [
        "${2:app.yaml}",
    ],
    deps = [
        "${3:$1}",
    ],
)
endsnippet

snippet py_appengine_lib "Python Appengine Library" b
py_appengine_library(
    name = "${1:name}",
    srcs = ["$1.py"],
    envs = [{"runtime": "${2:python27}"}],
    deps = [
        $0
    ],
)
endsnippet

snippet py_appengine_test "Python Appengine Test" b
py_appengine_test(
    name = "${1:name}_test",
    srcs = ["$1_test.py"],
    envs = [{"runtime": "${2:python27}"}],
    deps = [
        ":$1",
        "//apphosting/contrib/testing:testutil",
    ],
)
endsnippet

snippet java_lib "Java Library" b
java_library(
    name = "${1:name}",
    srcs = ["$1.java"],
    deps = [
        "//java/com/google/common/base",
        $2
    ],
)
endsnippet

snippet java_proto_lib "Java Proto Library" b
java_proto_library(
    name = "$1_java_proto",
    compatible_with = ["//buildenv/target:${2:all}"],
    deps = [":${3:$1_proto}"],
)
endsnippet

snippet java_lite_proto_lib "Java Lite Proto Library" b
java_lite_proto_library(
    name = "$1_java_proto_lite",
    deps = [":${3:$1_proto}"],
)
endsnippet

snippet java_bin "Java Binary" b
java_binary(
    name = "${1:name}",
    main_class = "com.google.${2}",
)
endsnippet

snippet halide_lib "Halide Library (go/halide)" b
halide_library(
    name = "${1:name}",
    srcs = ["$1_generator.cc"],
    generator_args = "$2",
    generator_deps = [$3],
)
endsnippet

snippet go_lib "Go Library" b
go_library(
    name = "${1:name}",
    srcs = ["$1.go"],
    deps = [
        $2
    ],
)
endsnippet

snippet go_bin "Go Binary" b
go_binary(
    name = "${1:name}",
    srcs = ["$1.go"],
    deps = [
        $2
    ],
)
endsnippet

snippet go_test "Go Test" b
go_test(
    name = "${1:name}_test",
    srcs = ["$1_test.go"],
    library = ":$1",
    deps = [
        $2
    ],
)
endsnippet

snippet go_proto_lib "Go Proto Library" b
go_proto_library(
    name = "$1_go_proto",
    deps = [":${2:$1_proto}"],
)
endsnippet
